import{P as u,r as t,Q as s}from"./entry.75e5da12.js";const p=u("admin",()=>{const e=t(!1),i=t(!1),c=t(!1),l=t(!1),o=t([]),d=t([]);return{isCreateSuccess:e,isCreateFail:i,bankAdmin:o,isHandleTransactionSuccess:c,isHandleTransactionFail:l,bankAdminClient:d,createBankAdmin:async n=>{const a=await s.chanle.post("admin/bank",{json:n}).json().catch(()=>null);e.value=(a==null?void 0:a.success)??!1,i.value=!e.value},getBankAdmin:async()=>{const n=await s.chanle.get("admin/bank").json().catch(()=>null);n&&n.success&&(o.value=n.data)},updateBankAdmin:async n=>{await s.chanle.put("admin/bank",{json:n}).json().catch(()=>null)},handleTransaction:async n=>{const a=await s.chanle.post("transation",{json:n}).json().catch(()=>null);c.value=(a==null?void 0:a.success)??!1,l.value=!c.value},getBankAdminClient:async()=>{const n=await s.chanle.get("bank-client").json().catch(()=>null);n&&n.success&&(d.value=n.data)},deleteBankAdmin:async n=>{await s.chanle.delete(`admin/bank/${n}`).json().catch(()=>null)},maintainBank:async n=>{await s.chanle.put("admin/maintain-bank",{json:n}).json().catch(()=>null)}}});export{p as u};
