import{p as a,ax as l,a as u,D as d}from"./entry.75e5da12.js";const c=a({border:[Boolean,Number,String]},"border");function f(n){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:l();return{borderClasses:u(()=>{const e=d(n)?n.value:n.border,r=[];if(e===!0||e==="")r.push(`${s}--border`);else if(typeof e=="string"||e===0)for(const o of String(e).split(" "))r.push(`border-${o}`);return r})}}const m=a({elevation:{type:[Number,String],validator(n){const s=parseInt(n);return!isNaN(s)&&s>=0&&s<=24}}},"elevation");function g(n){return{elevationClasses:u(()=>{const t=d(n)?n.value:n.elevation,e=[];return t==null||e.push(`elevation-${t}`),e})}}const v=a({rounded:{type:[Boolean,Number,String],default:void 0}},"rounded");function b(n){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:l();return{roundedClasses:u(()=>{const e=d(n)?n.value:n.rounded,r=[];if(e===!0||e==="")r.push(`${s}--rounded`);else if(typeof e=="string"||e===0)for(const o of String(e).split(" "))r.push(`rounded-${o}`);return r})}}export{m as a,v as b,g as c,b as d,c as m,f as u};
